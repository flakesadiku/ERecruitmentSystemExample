@model ERecruitmentSystem.Models.Vacancy

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Vacancy</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Vacancy_Code)

    <div class="form-group">
        @Html.LabelFor(model => model.Vacancy_Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Vacancy_Code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Vacancy_Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.DropDownListFor(model => model.IsActive, new SelectList(new[] {
                       new { Value = "true" , Text="Open"},
                       new { Value = "false" , Text="Closed"}
                   },
                     "Value",
                     "Text",
                     Model
                      ), new { @class = "form-control", style = "width:60%;" })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input onclick="submitForm()" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    //Funksioni per editimin e pozites permes Api ne db
    function submitForm() {
        var vacancy = new Object();
        vacancy.Vacancy_Code = $('#Vacancy_Code').val();
        vacancy.Description = $('#Description').val();
        vacancy.StartDateTime = $('#StartDateTime').val();
        vacancy.EndDateTIme = $('#EndDateTime').val();
        vacancy.IsActive = $('#IsActive').val();

        $.ajax({
            url: "/api/VacanciesApi",
            type: "POST",
            data: { action: "update", vacancy: vacancy },
            dataTye: "json",
            success: function () {
                window.location.href = "/Vacancies/Index";
            }
        });
    }
</script>
